{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/Note.jsx","components/CreateArea.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","Footer","year","Date","getFullYear","Note","props","className","title","content","onClick","onDelete","id","CreateArea","useState","note","setNote","handleChange","event","target","name","value","prevState","onSubmit","preventDefault","onChange","placeholder","rows","type","onAdd","App","notes","setNotes","filter","index","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAUeA,MARf,WACE,OACE,iCACE,2CCMSC,MATf,WACE,IAAMC,GAAO,IAAIC,MAAOC,cACxB,OACE,iCACE,kDAAgBF,QCMPG,MAVf,SAAcC,GACZ,OACE,sBAAKC,UAAU,OAAf,UACE,6BAAKD,EAAME,QACX,4BAAIF,EAAMG,UACV,wBAAQC,QAAS,kBAAMJ,EAAMK,SAASL,EAAMM,KAA5C,wB,cCkCSC,MAvCf,SAAoBP,GAClB,MAAwBQ,mBAAS,CAAEN,MAAO,GAAIC,QAAS,KAAvD,mBAAOM,EAAP,KAAaC,EAAb,KACA,SAASC,EAAaC,GACpB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACdL,GAAQ,SAACM,GACP,OAAO,2BACFA,GADL,kBAEGF,EAAOC,OAQd,OACE,8BACE,uBAAME,SANV,SAAsBL,GACpBA,EAAMM,iBACNR,EAAQ,CAAER,MAAO,GAAIC,QAAS,MAI5B,UACE,uBACEgB,SAAUR,EACVG,KAAK,QACLM,YAAY,QACZL,MAAON,EAAKP,QAEd,0BACEiB,SAAUR,EACVG,KAAK,UACLM,YAAY,iBACZC,KAAK,IACLN,MAAON,EAAKN,UAEd,wBAAQmB,KAAK,SAASlB,QAAS,kBAAMJ,EAAMuB,MAAMd,IAAjD,uB,MCEOe,MA3Bf,WACE,MAA0BhB,mBAAS,IAAnC,mBAAOiB,EAAP,KAAcC,EAAd,KAKA,SAASrB,EAASC,GAChBoB,GAAS,SAACV,GAAD,OAAeA,EAAUW,QAAO,SAAClB,EAAMmB,GAAP,OAAiBA,IAAUtB,QAEtE,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAYiB,MAThB,SAAed,GACbiB,GAAS,SAACV,GAAD,4BAAmBA,GAAnB,CAA8BP,UASpCgB,EAAMI,KAAI,SAACpB,EAAMmB,GAAP,OACT,cAAC,EAAD,CAEEtB,GAAIsB,EACJ1B,MAAOO,EAAKP,MACZC,QAASM,EAAKN,QACdE,SAAUA,GAJLuB,MAOT,cAAC,EAAD,QClBSE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.630cd26c.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n    <header>\n      <h1>Keeper</h1>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction Footer() {\n  const year = new Date().getFullYear();\n  return (\n    <footer>\n      <p>Copyright â“’ {year}</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\n\nfunction Note(props) {\n  return (\n    <div className=\"note\">\n      <h1>{props.title}</h1>\n      <p>{props.content}</p>\n      <button onClick={() => props.onDelete(props.id)}>DELETE</button>\n    </div>\n  );\n}\n\nexport default Note;\n","import React, { useState } from \"react\";\n\nfunction CreateArea(props) {\n  const [note, setNote] = useState({ title: \"\", content: \"\" });\n  function handleChange(event) {\n    const { name, value } = event.target;\n    setNote((prevState) => {\n      return {\n        ...prevState,\n        [name]: value\n      };\n    });\n  }\n  function handleSubmit(event) {\n    event.preventDefault();\n    setNote({ title: \"\", content: \"\" });\n  }\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input\n          onChange={handleChange}\n          name=\"title\"\n          placeholder=\"Title\"\n          value={note.title}\n        />\n        <textarea\n          onChange={handleChange}\n          name=\"content\"\n          placeholder=\"Take a note...\"\n          rows=\"3\"\n          value={note.content}\n        />\n        <button type=\"submit\" onClick={() => props.onAdd(note)}>\n          Add\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateArea;\n","import React, { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Note from \"./components/Note\";\nimport CreateArea from \"./components/CreateArea\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n\n  function onAdd(note) {\n    setNotes((prevState) => [...prevState, note]);\n  }\n  function onDelete(id) {\n    setNotes((prevState) => prevState.filter((note, index) => index !== id));\n  }\n  return (\n    <div>\n      <Header />\n      <CreateArea onAdd={onAdd} />\n      {notes.map((note, index) => (\n        <Note\n          key={index}\n          id={index}\n          title={note.title}\n          content={note.content}\n          onDelete={onDelete}\n        />\n      ))}\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}